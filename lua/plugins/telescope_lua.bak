-- telescope-fzf-native.nvim 重新組建指引：
-- (1) cd $env:LOCALAPPDATA\nvim-data\lazy\telescope-fzf-native.nvim
-- (2) rm -r build
-- (3) nvim CMakeLists.txt
-- (4) cmake_minimum_required(VERSION 3.5...3.28) # Line 1
-- (5) rm -r build
-- (6) cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release
-- (7) cmake --build build --config Release
-- (8) 驗證檔案有産出：
--     (*) /AppData/Local/nvim-data/lazy/telescope-fzf-native.nvim/build/Release/fzf.lib and
--     (*) object C:/Users/AlanJui/AppData/Local/nvim-data/lazy/telescope-fzf-native .nvim/build/Release/fzf.exp
--     (*) fzf.vcxproj -> C:\Users\AlanJui\AppData\Local\nvim-data\lazy\telescope-fzf-native.nvim\build\Release\libfzf.dll
return {
  -- { "nvim-telescope/telescope-fzf-native.nvim", build = "make" },
  -- {
  --   "nvim-telescope/telescope-fzf-native.nvim",
  --   build = "cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release && cmake --build build --config Release"
  --   -- build = function()
  --   --   if vim.fn.has "win32" == 1 then
  --   --     -- Windows 環境強制使用 CMake
  --   --     -- CMake (Windows/GitBash, Linux, MacOS)
  --   --     return "cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release && cmake --build build --config Release"
  --   --   else
  --   --     -- 非 Windows (Linux/WSL/MacOS)
  --   --     -- Make (Linux, MacOS, Windows with MinGW)
  --   --     return "make"
  --   --   end
  --   -- end,
  -- },
  {
    "nvim-telescope/telescope.nvim",
    dependencies = {
      "nvim-telescope/telescope-dap.nvim",
      "nvim-telescope/telescope-file-browser.nvim",
      "nvim-telescope/telescope-live-grep-args.nvim",
      "nvim-telescope/telescope-project.nvim",
      "nvim-telescope/telescope-ui-select.nvim",
      "aaronhallaert/advanced-git-search.nvim",
      "ahmedkhalf/project.nvim",
      "benfowler/telescope-luasnip.nvim",
      "cljoly/telescope-repo.nvim",
      "olacin/telescope-cc.nvim",
      "stevearc/aerial.nvim",
      "tsakirist/telescope-lazy.nvim",
      {
        "nvim-telescope/telescope-fzf-native.nvim",
        build = "make",
        config = function()
          require("telescope").load_extension "fzf"
        end,
      },
      {
        "nvim-telescope/telescope-frecency.nvim",
        dependencies = { "kkharji/sqlite.lua" },
        config = function()
          require("telescope").load_extension "frecency"
        end,
      },
    },
    cmd = "Telescope",
    opts = function(_, conf)
      conf.defaults.mappings.i = {
        ["<C-j>"] = require("telescope.actions").move_selection_next,
        ["<Esc>"] = require("telescope.actions").close,
      }
      -- or
      -- table.insert(conf.defaults.mappings.i, your table)
      return conf
    end,
    config = function()
      require("telescope").setup {
        extensions = {
          fzf = {
            fuzzy = true, -- false will only do exact matching
            override_generic_sorter = true, -- override the generic sorter
            override_file_sorter = true, -- override the file sorter
            case_mode = "smart_case", -- or "ignore_case" or "respect_case"
            -- the default case_mode is "smart_case"
          },
        },
      }
      -- To get fzf loaded and working with telescope, you need to call
      -- load_extension, somewhere after setup function:
      require("telescope").load_extension "fzf"
    end,
  },
}

-- 使用 diagram.nvim 在 Neovim 中渲染 Mermaid、PlantUML、D2 等圖表
-- 僅在 Linux / WSL2 環境啟用（Windows 原生會停用）
-- 需要安裝外部工具：
-- npm i -g @mermaid-js/mermaid-cli
-- return {
--   {
--     "3rd/diagram.nvim",
--     ft = { "mermaid", "markdown" },
--     dependencies = {
--       { "nvim-lua/plenary.nvim" }, -- 方便用 job 控制
--       { "3rd/image.nvim", opts = {} }, -- you'd probably want to configure image.nvim manually instead of doing this
--     },
--     enabled = function()
--       return vim.loop.os_uname().sysname == "Linux" -- 只在 Linux/WSL 啟用
--     end,
--     opts = { -- you can just pass {}, defaults below
--       events = {
--         render_buffer = { "InsertLeave", "BufWinEnter", "TextChanged" },
--         clear_buffer = { "BufLeave" },
--       },
--       renderer_options = {
--         mermaid = {
--           background = nil, -- nil | "transparent" | "white" | "#hex"
--           theme = nil, -- nil | "default" | "dark" | "forest" | "neutral"
--           scale = 1, -- nil | 1 (default) | 2  | 3 | ...
--           width = nil, -- nil | 800 | 400 | ...
--           height = nil, -- nil | 600 | 300 | ...
--         },
--         plantuml = {
--           charset = nil,
--         },
--         d2 = {
--           theme_id = nil,
--           dark_theme_id = nil,
--           scale = nil,
--           layout = nil,
--           sketch = nil,
--         },
--         gnuplot = {
--           size = nil, -- nil | "800,600" | ...
--           font = nil, -- nil | "Arial,12" | ...
--           theme = nil, -- nil | "light" | "dark" | custom theme string
--         },
--       },
--     },
--     keys = {
--       { "<leader>mr", "<cmd>lua require('diagram').render()<CR>", desc = "Render Mermaid inline" },
--     },
--     config = function()
--       require("diagram").setup {
--
--         renderer = {
--           mermaid = {
--             command = "mmdc", -- Mermaid CLI
--             args = { "-i", "$FILENAME", "-o", "$OUTPUT" },
--           },
--         },
--         viewer = "chafa", -- or "catimg", "viu" 等
--       },
--       }
--     end,
--   },
-- }
-- ~/.config/nvim/lua/plugins/diagram.lua
return {
  {
    "3rd/diagram.nvim",
    enabled = function()
      return vim.loop.os_uname().sysname == "Linux" -- 只在 Linux/WSL 啟用
    end,
    ft = { "markdown", "mermaid", "plantuml", "d2", "norg" },
    dependencies = {
      { "3rd/image.nvim", opts = {} }, -- image.nvim 需另外配置終端支援（見第2點）
    },
    opts = {
      -- 啟用整合：從 buffer 擷取 mermaid/plantuml 等區塊
      integrations = {
        require "diagram.integrations.markdown",
        -- 如有用 neorg，再加：require("diagram.integrations.neorg"),
      },
      -- 自動渲染事件（也可清空=完全手動）
      events = {
        render_buffer = { "InsertLeave", "BufWinEnter", "TextChanged" },
        clear_buffer = { "BufLeave" },
      },
      -- 針對各 renderer 的參數
      renderer_options = {
        mermaid = {
          theme = "default", -- default | dark | forest | neutral
          background = "transparent",
          scale = 1, -- 1/2/3...
          width = nil, -- 例如 800
          height = nil, -- 例如 600
        },
        plantuml = {
          charset = "utf-8",
        },
        -- d2/gnuplot 也可在這裡調
      },
    },
    keys = {
      -- ★ 放游標在 mermaid/plantuml 區塊內 → 顯示該圖於新 tab
      {
        "<leader>mr",
        function()
          require("diagram").show_diagram_hover()
        end,
        desc = "Diagram: show image (hover) in a new tab",
        mode = "n",
      },
    },
  },
}
